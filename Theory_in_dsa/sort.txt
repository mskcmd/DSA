Sure, I can provide you with examples of Bubble Sort, Insertion Sort, Selection Sort, Quick Sort, and Merge Sort in JavaScript. Let's go through each one:

1. **Bubble Sort:**
```javascript
function bubbleSort(arr) {
    let n = arr.length;
    for (let i = 0; i < n - 1; i++) {
        for (let j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                // Swap arr[j] and arr[j+1]
                let temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}

let array = [64, 34, 25, 12, 22, 11, 90];
bubbleSort(array);
console.log("Bubble Sorted Array:", array);
```

2. **Insertion Sort:**
```javascript
function insertionSort(arr) {
    let n = arr.length;
    for (let i = 1; i < n; i++) {
        let key = arr[i];
        let j = i - 1;
        while (j >= 0 && arr[j] > key) {
            arr[j + 1] = arr[j];
            j = j - 1;
        }
        arr[j + 1] = key;
    }
}

let array = [64, 34, 25, 12, 22, 11, 90];
insertionSort(array);
console.log("Insertion Sorted Array:", array);
```

3. **Selection Sort:**
```javascript
function selectionSort(arr) {
    let n = arr.length;
    for (let i = 0; i < n - 1; i++) {
        let minIndex = i;
        for (let j = i + 1; j < n; j++) {
            if (arr[j] < arr[minIndex]) {
                minIndex = j;
            }
        }
        let temp = arr[minIndex];
        arr[minIndex] = arr[i];
        arr[i] = temp;
    }
}

let array = [64, 34, 25, 12, 22, 11, 90];
selectionSort(array);
console.log("Selection Sorted Array:", array);
```

4. **Quick Sort:**
```javascript
function quickSort(arr) {
    if (arr.length <= 1) {
        return arr;
    }

    let pivot = arr[0];
    let left = [];
    let right = [];

    for (let i = 1; i < arr.length; i++) {
        if (arr[i] < pivot) {
            left.push(arr[i]);
        } else {
            right.push(arr[i]);
        }
    }

    return quickSort(left).concat(pivot, quickSort(right));
}

let array = [64, 34, 25, 12, 22, 11, 90];
let sortedArray = quickSort(array);
console.log("Quick Sorted Array:", sortedArray);
```

5. **Merge Sort:**
```javascript
function mergeSort(arr) {
    if (arr.length <= 1) {
        return arr;
    }

    const middle = Math.floor(arr.length / 2);
    const left = arr.slice(0, middle);
    const right = arr.slice(middle);

    return merge(mergeSort(left), mergeSort(right));
}

function merge(left, right) {
    let result = [];
    let leftIndex = 0;
    let rightIndex = 0;

    while (leftIndex < left.length && rightIndex < right.length) {
        if (left[leftIndex] < right[rightIndex]) {
            result.push(left[leftIndex]);
            leftIndex++;
        } else {
            result.push(right[rightIndex]);
            rightIndex++;
        }
    }

    return result.concat(left.slice(leftIndex)).concat(right.slice(rightIndex));
}

let array = [64, 34, 25, 12, 22, 11, 90];
let sortedArray = mergeSort(array);
console.log("Merge Sorted Array:", sortedArray);
```

These examples demonstrate the basic implementation of each sorting algorithm in JavaScript.